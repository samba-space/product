server:
  port: 8080  # 공통 포트 설정
  tomcat:
    max-threads: 500
    max-connections: 20000
    accept-count: 1000
##    connection-timeout: 30000  # 30초
management:
  tracing:
    sampling:
      probability: 1.0
    enabled: true
  otlp:
    tracing:
      endpoint: http://localhost:4317
      protocol: grpc
otel:
  service:
    name: ${spring.application.name}
  exporter:
    otlp:
      endpoint: http://localhost:4317
logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
spring:
  application:
    name: product
  h2:
    console:
      enabled: true
  datasource:
    driver-class-name: io.opentelemetry.instrumentation.jdbc.OpenTelemetryDriver
    url: jdbc:otel:mysql://product.cluster-ct0gsiiwy4xd.ap-northeast-2.rds.amazonaws.com:3306/product
#    url: jdbc:otel:mysql:replication://product.cluster-ct0gsiiwy4xd.ap-northeast-2.rds.amazonaws.com:3306,product.cluster-ro-ct0gsiiwy4xd.ap-northeast-2.rds.amazonaws.com:3306/product
    username: admin
    password: qudtjf12?!
    hikari:
      maximum-pool-size: 100
      minimum-idle: 10
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
    open-in-view: false
    properties:
      hibernate:
        format_sql: false
#spring:
#  application:
#    name: product
#  h2:
#    console:
#      enabled: true
#  datasource:
#    driver-class-name: io.opentelemetry.instrumentation.jdbc.OpenTelemetryDriver
#    url: jdbc:otel:mysql:replication://localhost:3306,localhost:3307,localhost:3308/test
#    username: test
#    password: test
#    hikari:
#      maximum-pool-size: 100
#      minimum-idle: 10
#      connection-timeout: 30000
#      idle-timeout: 600000
#      max-lifetime: 1800000
#  jpa:
#    defer-datasource-initialization: true
#    open-in-view: false
#    properties:
#      hibernate:
#        format_sql: false